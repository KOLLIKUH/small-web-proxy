# Run as nginx user for security
user nginx;

# Set worker processes to auto (matches CPU cores)
worker_processes auto;

# Process ID file
pid /var/run/nginx.pid;

# Maximum number of open files per worker process
worker_rlimit_nofile 100000;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    # Maximum connections per worker (total = worker_processes * worker_connections)
    worker_connections 4096;
    
    # Accept multiple connections at once
    multi_accept on;
    
    # Use efficient connection method (Linux)
    use epoll;
}

http {
    # Basic Settings
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    # File handling
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 10s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Client settings
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    
    # Timeouts
    send_timeout 10s;
    keepalive_timeout 30s;
    keepalive_requests 10000;
    reset_timedout_connection on;
    
    # Logging format with extended information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json
        '{'
            '"timestamp":"$time_iso8601",'
            '"remote_addr":"$remote_addr",'
            '"body_bytes_sent":$body_bytes_sent,'
            '"request_time":$request_time,'
            '"response_status":$status,'
            '"request":"$request",'
            '"request_method":"$request_method",'
            '"host":"$host",'
            '"upstream_cache_status":"$upstream_cache_status",'
            '"upstream_addr":"$upstream_addr",'
            '"http_x_forwarded_for":"$http_x_forwarded_for",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"http_version":"$server_protocol",'
            '"nginx_access":true'
        '}';
    
    # Logging
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log main buffer=16k flush=2m;

    # Security headers (global)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    # add_header Permissions-Policy "interest-cohort=()" always;
    # add_header X-XSS-Protection "0" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_static on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        application/wasm
        application/x-font-opentype
        font/woff2;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_min_length 1000;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Map for security
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Real IP configuration (adjust based on your setup)
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    
    # Proxy settings (global)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # Proxy buffering
    proxy_buffering on;
    proxy_buffer_size 16k;
    proxy_buffers 32 16k;
    proxy_busy_buffers_size 64k;
    proxy_max_temp_file_size 0;   # не писать на диск (если память позволяет)
    
    # Proxy timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Hide upstream headers
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
    
    # SSL configuration template
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_ecdh_curve X25519:secp384r1;
    ssl_buffer_size 4k;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    server {
        listen 80 default_server;
        server_name _;
        return 404;
    }

    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}